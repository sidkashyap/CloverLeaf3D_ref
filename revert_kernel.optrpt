Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: revert_kernel_module._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (revert_kernel_module._) [1] revert_kernel.f90(25,8)

===========================================================================

Begin optimization report for: REVERT_KERNEL_MODULE::REVERT_KERNEL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (REVERT_KERNEL_MODULE::REVERT_KERNEL) [2] revert_kernel.f90(29,12)


    Report from: OpenMP optimizations [openmp]

revert_kernel.f90(41:7-41:7):OMP:revert_kernel_module_mp_revert_kernel_:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at revert_kernel.f90(44,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at revert_kernel.f90(45,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at revert_kernel.f90(46,7)
         remark #25401: memcopy(with guard) generated
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at revert_kernel.f90(46,7)
         <Peeled loop for vectorization, Multiversioned v2>
         LOOP END

         LOOP BEGIN at revert_kernel.f90(46,7)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 4 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 2.550 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at revert_kernel.f90(46,7)
         <Alternate Alignment Vectorized Loop, Multiversioned v2>
         LOOP END

         LOOP BEGIN at revert_kernel.f90(46,7)
         <Remainder loop for vectorization, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at revert_kernel.f90(54,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at revert_kernel.f90(55,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at revert_kernel.f90(56,7)
         remark #25401: memcopy(with guard) generated
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at revert_kernel.f90(56,7)
         <Peeled loop for vectorization, Multiversioned v2>
         LOOP END

         LOOP BEGIN at revert_kernel.f90(56,7)
         <Multiversioned v2>
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 4 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 2.550 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at revert_kernel.f90(56,7)
         <Alternate Alignment Vectorized Loop, Multiversioned v2>
         LOOP END

         LOOP BEGIN at revert_kernel.f90(56,7)
         <Remainder loop for vectorization, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

revert_kernel.f90(47,9):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
revert_kernel.f90(47,9):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
revert_kernel.f90(47,9):remark #34026: call to memcpy implemented as a call to optimized library version
revert_kernel.f90(57,9):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
revert_kernel.f90(57,9):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
revert_kernel.f90(57,9):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================
