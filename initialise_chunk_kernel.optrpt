Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: INITIALISE_CHUNK_KERNEL_MODULE::INITIALISE_CHUNK_KERNEL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (INITIALISE_CHUNK_KERNEL_MODULE::INITIALISE_CHUNK_KERNEL) [1] initialise_chunk_kernel.f90(26,12)


    Report from: OpenMP optimizations [openmp]

initialise_chunk_kernel.f90(68:7-68:7):OMP:initialise_chunk_kernel_module_mp_initialise_chunk_kernel_:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at initialise_chunk_kernel.f90(70,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(70,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 2.140 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(70,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(76,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(76,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 2.540 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(76,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(82,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(82,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 2.140 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(82,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(88,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(88,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 2.540 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(88,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(94,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(94,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 2.140 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(94,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(100,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(100,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 2.540 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(100,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(106,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(106,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.950 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(106,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(106,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(112,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(112,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 2.540 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(112,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(118,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(118,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.950 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(118,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(118,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(124,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(124,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 2.540 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(124,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(130,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(130,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 1.950 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(130,3)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(130,3)
<Remainder loop for vectorization>
   remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(136,3)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(136,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 2.540 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(136,3)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(142,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at initialise_chunk_kernel.f90(143,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(144,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(144,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 9 
         remark #15477: vector loop cost: 1.500 
         remark #15478: estimated potential speedup: 5.480 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(144,7)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(144,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(152,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #25440: unrolled and jammed by 4   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at initialise_chunk_kernel.f90(153,5)
      remark #25440: unrolled and jammed by 4   (pre-vector) 
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 4 
         remark #15451: unmasked unaligned unit stride stores: 12 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 101 
         remark #15477: vector loop cost: 36.000 
         remark #15478: estimated potential speedup: 2.750 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at initialise_chunk_kernel.f90(153,5)
   <Remainder>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 4 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 25 
         remark #15477: vector loop cost: 6.000 
         remark #15478: estimated potential speedup: 3.950 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(152,3)
<Remainder>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at initialise_chunk_kernel.f90(153,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 1.500 
         remark #15478: estimated potential speedup: 3.750 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Remainder loop for vectorization>
         remark #15301: REMAINDER LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(154,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(162,3)
   remark #25440: unrolled and jammed by 4   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at initialise_chunk_kernel.f90(163,5)
      remark #25440: unrolled and jammed by 4   (pre-vector) 
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 16 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 101 
         remark #15477: vector loop cost: 64.000 
         remark #15478: estimated potential speedup: 1.560 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at initialise_chunk_kernel.f90(163,5)
   <Remainder>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 2 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 25 
         remark #15477: vector loop cost: 14.000 
         remark #15478: estimated potential speedup: 1.750 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Remainder loop for vectorization>
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(162,3)
<Remainder>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at initialise_chunk_kernel.f90(163,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 3.000 
         remark #15478: estimated potential speedup: 1.930 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(164,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(173,5)
   remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 2 1 3 )
   remark #25440: unrolled and jammed by 4   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized   [ initialise_chunk_kernel.f90(173,5) ]

   LOOP BEGIN at initialise_chunk_kernel.f90(172,3)
      remark #25440: unrolled and jammed by 4   (pre-vector) 
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 16 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 101 
         remark #15477: vector loop cost: 64.000 
         remark #15478: estimated potential speedup: 1.560 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at initialise_chunk_kernel.f90(172,3)
   <Remainder>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 2 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 25 
         remark #15477: vector loop cost: 14.000 
         remark #15478: estimated potential speedup: 1.750 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Remainder loop for vectorization>
         remark #15335: remainder loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at initialise_chunk_kernel.f90(173,5)
<Remainder>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at initialise_chunk_kernel.f90(172,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 6 
         remark #15477: vector loop cost: 3.000 
         remark #15478: estimated potential speedup: 1.930 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Alternate Alignment Vectorized Loop>
      LOOP END

      LOOP BEGIN at initialise_chunk_kernel.f90(174,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: initialise_chunk_kernel_module._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (initialise_chunk_kernel_module._) [2] initialise_chunk_kernel.f90(22,8)

===========================================================================
