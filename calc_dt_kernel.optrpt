Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: calc_dt_kernel_module._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_dt_kernel_module._) [1] calc_dt_kernel.f90(24,8)

===========================================================================

Begin optimization report for: CALC_DT_KERNEL_MODULE::CALC_DT_KERNEL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (CALC_DT_KERNEL_MODULE::CALC_DT_KERNEL) [2] calc_dt_kernel.f90(28,12)
  -> EXTERN: (166,5) for_write_seq_lis
  -> EXTERN: (167,5) for_write_seq_lis
  -> EXTERN: (167,5) for_write_seq_lis_xmit
  -> EXTERN: (167,5) for_write_seq_lis_xmit
  -> EXTERN: (168,5) for_write_seq_lis
  -> EXTERN: (168,5) for_write_seq_lis_xmit
  -> EXTERN: (168,5) for_write_seq_lis_xmit
  -> EXTERN: (169,5) for_write_seq_lis
  -> EXTERN: (169,5) for_write_seq_lis_xmit
  -> EXTERN: (170,5) for_write_seq_lis
  -> EXTERN: (171,5) for_write_seq_lis
  -> EXTERN: (171,5) for_write_seq_lis_xmit
  -> EXTERN: (171,5) for_write_seq_lis_xmit
  -> EXTERN: (172,5) for_write_seq_lis
  -> EXTERN: (172,5) for_write_seq_lis_xmit
  -> EXTERN: (172,5) for_write_seq_lis_xmit
  -> EXTERN: (173,5) for_write_seq_lis
  -> EXTERN: (173,5) for_write_seq_lis_xmit
  -> EXTERN: (173,5) for_write_seq_lis_xmit
  -> EXTERN: (174,5) for_write_seq_lis
  -> EXTERN: (174,5) for_write_seq_lis_xmit
  -> EXTERN: (174,5) for_write_seq_lis_xmit
  -> EXTERN: (175,5) for_write_seq_lis
  -> EXTERN: (175,5) for_write_seq_lis_xmit
  -> EXTERN: (175,5) for_write_seq_lis_xmit
  -> EXTERN: (176,5) for_write_seq_lis
  -> EXTERN: (176,5) for_write_seq_lis_xmit
  -> EXTERN: (176,5) for_write_seq_lis_xmit
  -> EXTERN: (177,5) for_write_seq_lis
  -> EXTERN: (177,5) for_write_seq_lis_xmit
  -> EXTERN: (177,5) for_write_seq_lis_xmit
  -> EXTERN: (178,5) for_write_seq_lis
  -> EXTERN: (178,5) for_write_seq_lis_xmit
  -> EXTERN: (178,5) for_write_seq_lis_xmit
  -> EXTERN: (179,5) for_write_seq_lis
  -> EXTERN: (180,5) for_write_seq_lis
  -> EXTERN: (180,5) for_write_seq_lis_xmit
  -> EXTERN: (180,5) for_write_seq_lis_xmit
  -> EXTERN: (180,5) for_write_seq_lis_xmit


    Report from: OpenMP optimizations [openmp]

calc_dt_kernel.f90(99:7-99:7):OMP:calc_dt_kernel_module_mp_calc_dt_kernel_:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at calc_dt_kernel.f90(102,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at calc_dt_kernel.f90(103,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at calc_dt_kernel.f90(104,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at calc_dt_kernel.f90(104,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15450: unmasked unaligned unit stride loads: 31 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 500 
         remark #15477: vector loop cost: 242.000 
         remark #15478: estimated potential speedup: 2.040 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at calc_dt_kernel.f90(104,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at calc_dt_kernel.f90(142,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at calc_dt_kernel.f90(143,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at calc_dt_kernel.f90(144,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at calc_dt_kernel.f90(144,7)
         remark #25084: Preprocess Loopnests: Moving Out Store    [ calc_dt_kernel.f90(145,25) ]
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 9 
         remark #15477: vector loop cost: 2.500 
         remark #15478: estimated potential speedup: 3.350 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at calc_dt_kernel.f90(144,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END
LOOP END
===========================================================================
